---
# Install yoro dependencies and deploy yoro codebase

- name: Deploy code on yoro server
  git: "repo={{ repository }} dest={{ deploy_dir }} version={{ branch }} accept_hostkey=yes force=yes"
  tags: deploy


- name: Create settings_local
  shell: "chdir={{ backend_dir }}yoro/yoro/ cp settings_{{ server_environment }}.py settings_local.py"
  tags: deploy


- name: Make settings changes in app_js of yoro frontend
  shell: source "{{ orchestration_dir }}"/app_js_settings.sh
  tags: deploy
  when: "'{{ server_environment }}' == 'production'"


- name: Create media directories if absent
  shell:  "mkdir -p media/{{ item }}"
  with_items: media_folders
  args:
    chdir: "{{ backend_dir }}/yoro/"
    creates: "{{ backend_dir }}/yoro/media/{{ item }}"
  tags: deploy


- name: Install python dependencies from requirements file
  pip: requirements="{{ backend_dir }}/yoro/requirements.txt" virtualenv="{{ virtualenv_dir }}" extra_args="--allow-external PIL --allow-unverified PIL"
  tags: deploy


- name: syncdb on yoro
  django_manage: >
    command=syncdb
    app_path="{{ backend_dir }}yoro/"
    settings='yoro.settings'
    virtualenv="{{ virtualenv_dir }}"
  tags: deploy


- name: migrate on yoro
  command: chdir="{{ backend_dir }}yoro/" {{ virtualenv_dir }}/bin/python manage.py migrate
  tags: deploy


- name: perform collect static 
  command: chdir="{{ backend_dir }}yoro/" {{ virtualenv_dir }}/bin/python manage.py collectstatic --noinput
  tags: deploy
  

- name: restart yoro uwsgi server
  shell: source "{{ orchestration_dir }}"/restart_yoro_server.sh
  tags: deploy

- name: restart celerybeat
  command: monit restart celerybeat
  sudo: yes
  sudo_user: root
  tags: deploy

- name: stop celery
  command: service celery stop
  sudo: yes
  sudo_user: root
  tags: deploy

- name: start celery
  command: service celery start
  sudo: yes
  sudo_user: root
  tags: deploy